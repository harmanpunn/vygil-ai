{
  "name": "vygil-mcp-server",
  "version": "1.0.0",
  "description": "Vygil MCP Server - Production-ready AI-powered activity tracking with screen capture and OCR",
  "main": "dist/vygil-mcp-server.js",
  "type": "module",
  "scripts": {
    "build": "tsc",
    "start": "node dist/vygil-mcp-server.js",
    "start:http": "node dist/vygil-mcp-server.js http",
    "start:debug": "LOG_LEVEL=debug node dist/vygil-mcp-server.js",
    "start:production": "NODE_ENV=production node dist/vygil-mcp-server.js",
    "dev": "npx ts-node --esm src/vygil-mcp-server.ts",
    "dev:http": "npx ts-node --esm src/vygil-mcp-server.ts http",
    "dev:debug": "LOG_LEVEL=debug npx ts-node --esm src/vygil-mcp-server.ts",
    "inspect": "npm run build && npx @modelcontextprotocol/inspector node dist/vygil-mcp-server.js",
    "clean": "rm -rf dist/",
    "test:tools": "echo \"Use 'npm run inspect' to test tools with MCP Inspector\"",
    "test:http": "curl -X POST http://localhost:3000/mcp -H 'Content-Type: application/json' -d '{\"jsonrpc\":\"2.0\",\"id\":1,\"method\":\"tools/list\"}'",
    "test:health": "curl http://localhost:3000/health",
    "test:metrics": "curl http://localhost:3000/metrics",
    "lint": "tsc --noEmit",
    "docker:build": "docker build -t vygil-mcp-server .",
    "docker:run": "docker run -p 3000:3000 vygil-mcp-server"
  },
  "keywords": [
    "mcp",
    "model-context-protocol",
    "activity-tracking",
    "screen-capture",
    "ocr",
    "ai",
    "automation",
    "http",
    "streamable",
    "production",
    "monitoring",
    "health-check",
    "metrics"
  ],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "@modelcontextprotocol/sdk": "^1.17.3",
    "express": "^4.19.2",
    "jimp": "^0.22.10",
    "screenshot-desktop": "^1.15.1",
    "tesseract.js": "^6.0.1",
    "uuid": "^8.3.2",
    "zod": "^3.25.76"
  },
  "devDependencies": {
    "@types/express": "^4.17.21",
    "@types/jimp": "^0.2.28",
    "@types/node": "^16.18.126",
    "@types/screenshot-desktop": "^1.15.0",
    "@types/uuid": "^10.0.0",
    "concurrently": "^7.6.0",
    "nodemon": "^3.1.10",
    "ts-node": "^10.9.2",
    "typescript": "^4.9.5"
  },
  "engines": {
    "node": ">=18.0.0"
  },
  "config": {
    "defaults": {
      "PORT": "3000",
      "MCP_TRANSPORT": "stdio",
      "LOG_LEVEL": "info",
      "ALLOWED_ORIGINS": "http://localhost:3000,http://localhost:8080,http://127.0.0.1:3000",
      "ENABLE_METRICS": "true",
      "ENABLE_HEALTH_CHECK": "true",
      "ENABLE_DNS_REBINDING_PROTECTION": "true",
      "SHUTDOWN_TIMEOUT": "10000",
      "REQUEST_TIMEOUT": "30000"
    }
  }
}
